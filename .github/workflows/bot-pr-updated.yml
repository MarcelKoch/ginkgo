name: OnSyncPR

on:
  pull_request_target:
    types: [opened,synchronize]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  check-format:
    runs-on: ubuntu-latest
    if: github.event.pull_request.author_association == 'COLLABORATOR' || github.event.pull_request.author_association == 'MEMBER' || github.event.pull_request.author_association == 'OWNER'
    steps:
      - name: Checkout the latest code (shallow clone)
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}
      - name: Make origin/develop available
        shell: bash
        run: git fetch --depth 1 origin develop
      - uses: actions/setup-python@v3
      - uses: pre-commit/action@v3.0.0
        with:
          extra_args: --from-ref develop --to-ref HEAD
        id: pre-commit
      - name: Comment on PR
        if: ${{ failure() && steps.pre-commit.outcome == 'failure' }}
        run: cp .github/check-format.sh /tmp && /tmp/check-format.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload code formatting patch
        if: ${{ failure() && steps.pre-commit.outcome == 'failure' }}
        uses: actions/upload-artifact@v3
        with:
          name: patch
          path: format.patch

  check-wiki-changelog:
    runs-on: ubuntu-latest
    if: github.event.pull_request.author_association == 'COLLABORATOR' || github.event.pull_request.author_association == 'MEMBER' || github.event.pull_request.author_association == 'OWNER'
    steps:
    - name: Checkout the latest code (shallow clone)
      uses: actions/checkout@v3
      with:
        ref: develop
    - name: Check if PR number exists in wiki/Changelog
      env:
        GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}
      run: .github/check-wiki-changelog.sh

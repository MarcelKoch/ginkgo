name: Check formatting
on:
  pull_request_target:
    types: [opened,synchronize]

jobs:
  pre-commit:
    name: Run pre-commit hooks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Diff
        run: |
          git diff --numstat origin/develop..HEAD
      - name: Run pre-commit hooks
        uses: ./.github/actions/run-pre-commit
        id: pre-commit
      - name: Get changes list
        id: get-changes
        if: ${{ failure() && steps.pre-commit.outcome == 'failure' }}
        run: echo "changes=$(git ls-files -m)" >> $GITHUB_OUTPUT
      - name: Comment on PR
        if: ${{ failure() && steps.pre-commit.outcome == 'failure' }}
        run: |
          JOB_URL="https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"
          echo "The following files need to be formatted:" > body-file
          echo "```\n${{ steps.get-changes.outputs.changes }}\n``` >> body-file
          echo "You can find a formatting patch under **Artifacts** [here]($JOB_URL) or run `format!` if you have write access to Ginkgo" > body-file
          gh issue comment ${{ github.event.pull_request.number }} --body-file body-file
      - name: Upload code formatting patch
        if: ${{ failure() && steps.pre-commit.outcome == 'failure' }}
        uses: actions/upload-artifact@v3
        with:
          name: patch
          path: format.patch
